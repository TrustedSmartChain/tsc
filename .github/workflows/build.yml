name: Build Linux Binary

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      create_release:
        description: 'Create GitHub release'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for git describe

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.6'
        cache: true

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Build Linux binary
      env:
        VERSION: ${{ github.event.inputs.version || '1.0.0' }}
      run: |
        make build-linux VERSION=$VERSION
        ls -la build/

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: tscd-linux-${{ github.event.inputs.version || '1.0.0' }}
        path: build/tscd-linux
        retention-days: 30

    - name: Show binary info
      run: |
        echo "Binary size:"
        ls -lh build/tscd-linux
        echo "Binary version info:"
        ./build/tscd-linux version

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.create_release == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download binary artifact
      uses: actions/download-artifact@v4
      with:
        name: tscd-linux-${{ github.event.inputs.version || '1.0.0' }}
        path: build/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version || '1.0.0' }}
        release_name: TrustedSmartChain v${{ github.event.inputs.version || '1.0.0' }}
        body: |
          ## TrustedSmartChain v${{ github.event.inputs.version || '1.0.0' }}
          
          ### Downloads
          - **Linux (x86_64)**: `tscd-linux`
          
          ### Installation
          ```bash
          # Download and make executable
          chmod +x tscd-linux
          
          # Move to your PATH
          sudo mv tscd-linux /usr/local/bin/tscd
          ```
          
          ### Version Info
          Built with Go 1.23.6
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/tscd-linux
        asset_name: tscd-linux-v${{ github.event.inputs.version || '1.0.0' }}
        asset_content_type: application/octet-stream 